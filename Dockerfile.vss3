# /********************************************************************************
# * Copyright (c) 2022, 2023 Contributors to the Eclipse Foundation
# *
# * See the NOTICE file(s) distributed with this work for additional
# * information regarding copyright ownership.
# *
# * This program and the accompanying materials are made available under the
# * terms of the Apache License 2.0 which is available at
# * http://www.apache.org/licenses/LICENSE-2.0
# *
# * SPDX-License-Identifier: Apache-2.0
# ********************************************************************************/

# This is expected to be executed in the kuksa.val top-level directory
# You need to run build-all-targets.sh first, as this docker file jsut
# collects the artifacts

FROM python:3.10-bookworm AS builder

WORKDIR /app

RUN apt-get update && apt-get install -y git

RUN git clone --recurse-submodules --depth 1 --branch v3.1.1  https://github.com/COVESA/vehicle_signal_specification.git \
    && git clone --depth 1 --branch v0.7.2 https://github.com/eclipse-velocitas/vehicle-model-generator.git \
    && mkdir python-packages

COPY requirements.txt .

ENV PYTHONPATH="/app/python-packages/:${PYTHONPATH}"

RUN pip install --no-cache-dir --target /app/python-packages/ -r requirements.txt \
    && cd vehicle_signal_specification/ \
    && rm -rf .git docs-gen/ \
    && cd vss-tools/ \
    && python vspec2json.py -I ../spec -u ../spec/units.yaml ../spec/VehicleSignalSpecification.vspec vss.json \
    && mv vss.json ../../vehicle-model-generator/ \
    && cd ../../vehicle-model-generator/ \
    && cp -r src/velocitas/ /app/python-packages/velocitas/ \
    && python src/velocitas/model_generator/cli.py vss.json  -I ../vehicle_signal_specification/spec -u ../vehicle_signal_specification/spec/units.yaml \
    && mv ./gen_model/vehicle /app/python-packages/ \
    && cp -r /app/python-packages/vehicle /app/python-packages/std_vehicle


FROM node:18.20.4-bookworm AS node-builder

WORKDIR /app/node

RUN npm install -g pkg

COPY Kit-Manager /app/node/kit-manager/

RUN cd /app/node/kit-manager/ && npm install \
    && pkg -t node18-linux-arm64,node18-linux-x64 src/index.js

# Different targets need different base images, so prepare aliases here

# AMD is a statically linked MUSL build
FROM ubuntu:22.04 AS target-amd64
ENV BUILDTARGET="x86_64-unknown-linux-musl"
COPY ./target/x86_64-unknown-linux-musl/release/databroker /app/databroker

RUN groupadd -r sdvr && useradd -r -g sdvr dev \
    && chown -R dev:sdvr /app/databroker \
    && mkdir /home/dev/ && chown -R dev:sdvr /home/dev/ \
    && apt-get update && apt-get install -y --no-install-recommends python3 mosquitto \
    ca-certificates python-is-python3 nano python3-pip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

COPY --from=node-builder --chown=dev:sdvr --chmod=0755 /app/node/kit-manager/index-x64 /home/dev/ws/kit-manager/


# ARM64 is a statically linked GRPC build
FROM ubuntu:22.04 AS target-arm64
ENV BUILDTARGET="aarch64-unknown-linux-musl"
COPY ./target/aarch64-unknown-linux-musl/release/databroker /app/databroker

RUN groupadd -r sdvr && useradd -r -g sdvr dev \
    && chown -R dev:sdvr /app/databroker \
    && mkdir /home/dev/ && chown -R dev:sdvr /home/dev/ \
    && apt-get update && apt-get install -y --no-install-recommends python3 mosquitto \
    ca-certificates python-is-python3 nano python3-pip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

COPY --from=node-builder --chown=dev:sdvr --chmod=0755 /app/node/kit-manager/index-arm64 /home/dev/ws/kit-manager/


# Now adding generic parts
FROM target-$TARGETARCH AS target
ARG TARGETARCH

# Before running this file thirdparty files must have been created
# by build-all-targets.sh or corresponding command in buildaction
COPY ./databroker/thirdparty/ /app/thirdparty
COPY ./data/vss-core/vss_release_3.1.1.json /home/dev/vss_release_3.1.1.json
COPY ./data/vss-core/vss_release_4.0.json /home/dev/ws/vss_release_4.0.json
COPY ./data/vss-core/vss.json /home/dev/ws/vss.json


COPY --from=builder --chown=dev:sdvr --chmod=0755 /app/python-packages /home/dev/python-packages
COPY --chown=dev:sdvr --chmod=0755 kuksa-syncer /home/dev/ws/kuksa-syncer/
COPY --chown=dev:sdvr --chmod=0755 mock /home/dev/ws/mock/
COPY --chown=dev:sdvr --chmod=0755 mock/signals-v3.1.1.json /home/dev/ws/mock/signals.json
COPY mosquitto-no-auth.conf /etc/mosquitto/mosquitto-no-auth.conf
COPY --chown=dev:sdvr --chmod=0755 start_services.sh /start_services.sh

RUN ln -s /home/dev/python-packages/velocitas_sdk /home/dev/python-packages/sdv \
    && mv /home/dev/ws/kuksa-syncer/vehicle_model_manager.py /home/dev/ws/kuksa-syncer/pkg_manager.py home/dev/python-packages/ \
    && python -m py_compile /home/dev/ws/kuksa-syncer/syncer.py \
    && mv /home/dev/ws/kuksa-syncer/__pycache__/syncer.cpython-310.pyc /home/dev/ws/kuksa-syncer/syncer.pyc \
    && find /home/dev/ws/kuksa-syncer/ -mindepth 1 ! -name 'syncer.pyc' ! -name 'subpiper' ! -path '/home/dev/ws/kuksa-syncer/subpiper/*' -delete

USER dev

ENV ARCH=$TARGETARCH
ENV PYTHONPATH="/home/dev/python-packages/:${PYTHONPATH}"
ENV KUKSA_DATABROKER_ADDR=0.0.0.0
ENV KUKSA_DATABROKER_PORT=55555
ENV KUKSA_DATABROKER_METADATA_FILE=/home/dev/vss_release_3.1.1.json
EXPOSE $KUKSA_DATABROKER_PORT 1883

WORKDIR /home/dev/

ENTRYPOINT ["/start_services.sh"]