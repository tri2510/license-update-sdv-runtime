name: CI

on:
    pull_request:
        types: [opened, reopened, synchronize]

    workflow_dispatch:

jobs:          
  build-container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and export to local registry
        run: |
          docker build -t test-image:test .
      
      - name: Run container in detached mode
        run: |
            docker run -d --name test_container -e RUNTIME_NAME="GHA_Test" test-image:test
      - name: Wait for services to start
        run: sleep 5

      - name: Check services
        run: |
          if docker exec test_container pgrep -f "/app/databroker" > /dev/null; then
            echo "Success: Kuksa Databroker is running"
          else
            echo "Error: Kuksa Databroker is NOT running"
            exit 1
          fi
          if docker exec test_container pgrep -f "/home/dev/ws/kit-manager/node-km" > /dev/null; then
            echo "Success: Kit Manager is running"
          else
            echo "Error: Kit Manager is NOT running"
            exit 1
          fi
          if docker exec test_container pgrep -f "syncer.pyc" > /dev/null; then
            echo "Success: Kuksa Syncer is running"
          else
            echo "Error: Kuksa Syncer is NOT running"
            exit 1
          fi
          if docker exec test_container pgrep -f "mockprovider.py" > /dev/null; then
            echo "Success: Mockprovider is running"
          else
            echo "Error: Mockprovider is NOT running"
            exit 1
          fi
      - name: Output container logs
        run: |
          echo "Container logs:"
          docker logs test_container
      - name: Stop and remove container
        run: |
          docker stop test_container
          docker rm test_container

      - name: Build and Push Docker image
        if: success()
        run: echo "All programs successfully started inside SDV-Runtime"
