name: Release Docker Image

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version from tag
        id: vars
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build image (no push)
        id: build
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --output type=oci,dest=image.tar \
            -t boschvn/sdv-runtime:${{ steps.vars.outputs.VERSION }} .
        continue-on-error: true

      - name: Check if Docker credentials are set
        id: check-creds
        run: |
          echo "DOCKER_USERNAME='${{ secrets.DOCKER_USERNAME }}'"
          echo "DOCKER_PASSWORD='${{ secrets.DOCKER_PASSWORD }}'"
          if [ -n "${{ secrets.DOCKER_USERNAME }}" ] && [ -n "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "creds=true" >> $GITHUB_OUTPUT
          else
            echo "creds=false" >> $GITHUB_OUTPUT
          fi

      - name: Log in to DockerHub (optional)
        uses: docker/login-action@v3
        if: steps.build.outcome == 'success' && steps.check-creds.outputs.creds == 'true'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        continue-on-error: true

      - name: Push image to Docker Hub
        if: steps.build.outcome == 'success'
        run: |
          docker load -i image.tar
          docker push boschvn/sdv-runtime:${{ steps.vars.outputs.VERSION }}

      - name: Save Docker image as tar
        if: steps.build.outcome == 'success'
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --output type=docker,dest=sdv-runtime.tar \
            -t boschvn/sdv-runtime:${{ steps.vars.outputs.VERSION }} .

      - name: Upload image tar as artifact
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: sdv-runtime-tar
          path: sdv-runtime.tar

      - name: Create GitHub Release
        if: steps.build.outcome == 'success'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload image tar to GitHub Release
        if: steps.build.outcome == 'success'
        uses: softprops/action-gh-release@v2
        with:
          files: sdv-runtime.tar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
